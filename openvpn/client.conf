# Мы клиент и тащим часть конфига с сервера
# Здесь и далее ** должно совпадать с сервером
client
# ** tun интерфейс 
dev tun
# ** спользуем udp transport layer
proto udp
# Адрес и порт сервера
remote [openvpn-server.adress] [port] udp
# В большинстве случаев не нужно
# привязывать конкретных клиентов к конкретным портам
nobind
# Постоянно пытатся резолвить имя сервера
# Полезно при ненадежном соединении
resolv-retry infinite
# Должно быть так, чтобы не морочится с net30 масками
topology subnet
## Сертификаты
### Сервера
tls-auth [path]/ta.key 1
ca [path]/ca.crt
### Клиента
cert [path]/[client-name].crt
key [path]/[client-name].key
# ** Diffie hellman parameters.
#    Generate your own with:
#      openssl dhparam -out dh2048.pem 2048
# Требует осознанной настройки сертификатов на клиенте
# Соотвественно текущим реалиям, только поэтому закоменчено
;dh dh2048.pem

# пулл настроек с сервера
pull
# Try to preserve some state across restarts.
persist-key
persist-tun
# Verify server certificate by checking that the
# certicate has the correct key usage set.
# This is an important precaution to protect against
# a potential attack discussed here:
#  http://openvpn.net/howto.html#mitm
#
# To use this feature, you will need to generate
# your server certificates with the keyUsage set to
#   digitalSignature, keyEncipherment
# and the extendedKeyUsage to
#   serverAuth
# EasyRSA can do this for you.
# Подробнее в конфигах easy-rsa
remote-cert-tls server
# Some magick если не работает push с сервера
redirect-gateway autolocal
